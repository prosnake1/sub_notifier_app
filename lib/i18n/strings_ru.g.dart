///
/// Generated file. Do not edit.
///
// coverage:ignore-file
// ignore_for_file: type=lint, unused_import

import 'package:flutter/widgets.dart';
import 'package:intl/intl.dart';
import 'package:slang/generated.dart';
import 'strings.g.dart';

// Path: <root>
class TranslationsRu implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	TranslationsRu({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver, TranslationMetadata<AppLocale, Translations>? meta})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = meta ?? TranslationMetadata(
		    locale: AppLocale.ru,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <ru>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	late final TranslationsRu _root = this; // ignore: unused_field

	@override 
	TranslationsRu $copyWith({TranslationMetadata<AppLocale, Translations>? meta}) => TranslationsRu(meta: meta ?? this.$meta);

	// Translations
	@override String get lang => 'ru';
	@override String get cc => 'RU';
	@override String get welcome => '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å';
	@override String get keep_track => '–°–ª–µ–¥–∏—Ç—å –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ —Ç–µ–ø–µ—Ä—å –∫—É–¥–∞ –ø—Ä–æ—â–µ';
	@override String get go => '–í–ø–µ—Ä–µ–¥';
	@override String get my_subs => '–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏';
	@override String get settings => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏';
	@override String get add => '–î–æ–±–∞–≤–∏—Ç—å';
	@override String get kNull => '–ó–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç';
	@override String get theme => '–¢–µ–º–∞';
	@override String get icons => '–ò–∫–æ–Ω–∫–∏';
	@override String get upload => '–ó–∞–≥—Ä—É–∑–∏—Ç—å';
	@override String get language => '–Ø–∑—ã–∫';
	@override String get icon_title => '–ò–∫–æ–Ω–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏';
	@override String get icon_descreption => '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ª—é–±—É—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫, –ª–∏–±–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—é';
	@override String get new_sub => '–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞';
	@override String get name => '–ù–∞–∑–≤–∞–Ω–∏–µ';
	@override String get pay_date => '–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã';
	@override String get reminder => '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ';
	@override String get when_remind => '–ù–∞–ø–æ–º–Ω–∏–º';
	@override String get notes => '–ó–∞–º–µ—Ç–∫–∏';
	@override String get save => '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å';
	@override String get about => '–ü–æ–¥—Ä–æ–±–Ω–µ–µ';
	@override String charge_off({required Object whenPay}) => '–°–ø–∏—Å–∞–Ω–∏–µ: ${whenPay}';
	@override String get delete => '–£–¥–∞–ª–∏—Ç—å';
	@override String get edit => '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
	@override String get editing_mode => '–†–µ–¥–∞–∫—Ç–æ—Ä';
	@override String get changes_alert => '–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?';
	@override String get cancel => '–û—Ç–º–µ–Ω–∞';
	@override String get kContinue => '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å';
	@override late final _TranslationsRemindBeforeRu remind_before = _TranslationsRemindBeforeRu._(_root);
	@override late final _TranslationsSubRu sub = _TranslationsSubRu._(_root);
	@override late final _TranslationsWarningsRu warnings = _TranslationsWarningsRu._(_root);
	@override late final _TranslationsNotificationRu notification = _TranslationsNotificationRu._(_root);
}

// Path: remind_before
class _TranslationsRemindBeforeRu implements TranslationsRemindBeforeEn {
	_TranslationsRemindBeforeRu._(this._root);

	final TranslationsRu _root; // ignore: unused_field

	// Translations
	@override String get day => '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ 1 –¥–µ–Ω—å';
	@override String get three_days => '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ 3 –¥–Ω—è';
	@override String get week => '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ –Ω–µ–¥–µ–ª—é';
	@override String get month => '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ –º–µ—Å—è—Ü';
}

// Path: sub
class _TranslationsSubRu implements TranslationsSubEn {
	_TranslationsSubRu._(this._root);

	final TranslationsRu _root; // ignore: unused_field

	// Translations
	@override late final _TranslationsSubRemainingRu remaining = _TranslationsSubRemainingRu._(_root);
}

// Path: warnings
class _TranslationsWarningsRu implements TranslationsWarningsEn {
	_TranslationsWarningsRu._(this._root);

	final TranslationsRu _root; // ignore: unused_field

	// Translations
	@override String get edit_restricted => '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
}

// Path: notification
class _TranslationsNotificationRu implements TranslationsNotificationEn {
	_TranslationsNotificationRu._(this._root);

	final TranslationsRu _root; // ignore: unused_field

	// Translations
	@override String get title => '–°–∫–æ—Ä–µ–µ –æ—Ç–∫–ª—é—á–∏ –ø–æ–¥–ø–∏—Å–∫—É ‚ùó';
	@override String body({required Object sub}) => '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–±–µ –æ—Ç–∫–ª—é—á–∏—Ç—å ${sub} –ø–æ–∫–∞ –Ω–µ –ø–æ–∑–¥–Ω–æüòè';
}

// Path: sub.remaining
class _TranslationsSubRemainingRu implements TranslationsSubRemainingEn {
	_TranslationsSubRemainingRu._(this._root);

	final TranslationsRu _root; // ignore: unused_field

	// Translations
	@override String get today => '–ù–∞–ø–æ–º–Ω–∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è';
	@override String get tomorrow => '–ù–∞–ø–æ–º–Ω–∏–º –∑–∞–≤—Ç—Ä–∞';
	@override String get two_days => '–ù–∞–ø–æ–º–Ω–∏–º –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞';
	@override String three_four_days({required Object remainingDays}) => '–ù–∞–ø–æ–º–Ω–∏–º —á–µ—Ä–µ–∑ ${remainingDays} –¥–Ω—è';
	@override String more_days({required Object remainingDays}) => '–ù–∞–ø–æ–º–Ω–∏–º —á–µ—Ä–µ–∑ ${remainingDays} –¥–Ω–µ–π';
	@override String get expired => '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ';
}

/// Flat map(s) containing all translations.
/// Only for edge cases! For simple maps, use the map function of this library.
extension on TranslationsRu {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'lang': return 'ru';
			case 'cc': return 'RU';
			case 'welcome': return '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å';
			case 'keep_track': return '–°–ª–µ–¥–∏—Ç—å –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ —Ç–µ–ø–µ—Ä—å –∫—É–¥–∞ –ø—Ä–æ—â–µ';
			case 'go': return '–í–ø–µ—Ä–µ–¥';
			case 'my_subs': return '–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏';
			case 'settings': return '–ù–∞—Å—Ç—Ä–æ–π–∫–∏';
			case 'add': return '–î–æ–±–∞–≤–∏—Ç—å';
			case 'kNull': return '–ó–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç';
			case 'theme': return '–¢–µ–º–∞';
			case 'icons': return '–ò–∫–æ–Ω–∫–∏';
			case 'upload': return '–ó–∞–≥—Ä—É–∑–∏—Ç—å';
			case 'language': return '–Ø–∑—ã–∫';
			case 'icon_title': return '–ò–∫–æ–Ω–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏';
			case 'icon_descreption': return '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ª—é–±—É—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫, –ª–∏–±–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—é';
			case 'new_sub': return '–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞';
			case 'name': return '–ù–∞–∑–≤–∞–Ω–∏–µ';
			case 'pay_date': return '–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã';
			case 'reminder': return '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ';
			case 'when_remind': return '–ù–∞–ø–æ–º–Ω–∏–º';
			case 'notes': return '–ó–∞–º–µ—Ç–∫–∏';
			case 'save': return '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å';
			case 'about': return '–ü–æ–¥—Ä–æ–±–Ω–µ–µ';
			case 'charge_off': return ({required Object whenPay}) => '–°–ø–∏—Å–∞–Ω–∏–µ: ${whenPay}';
			case 'delete': return '–£–¥–∞–ª–∏—Ç—å';
			case 'edit': return '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
			case 'editing_mode': return '–†–µ–¥–∞–∫—Ç–æ—Ä';
			case 'changes_alert': return '–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?';
			case 'cancel': return '–û—Ç–º–µ–Ω–∞';
			case 'kContinue': return '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å';
			case 'remind_before.day': return '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ 1 –¥–µ–Ω—å';
			case 'remind_before.three_days': return '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ 3 –¥–Ω—è';
			case 'remind_before.week': return '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ –Ω–µ–¥–µ–ª—é';
			case 'remind_before.month': return '–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞ –º–µ—Å—è—Ü';
			case 'sub.remaining.today': return '–ù–∞–ø–æ–º–Ω–∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è';
			case 'sub.remaining.tomorrow': return '–ù–∞–ø–æ–º–Ω–∏–º –∑–∞–≤—Ç—Ä–∞';
			case 'sub.remaining.two_days': return '–ù–∞–ø–æ–º–Ω–∏–º –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞';
			case 'sub.remaining.three_four_days': return ({required Object remainingDays}) => '–ù–∞–ø–æ–º–Ω–∏–º —á–µ—Ä–µ–∑ ${remainingDays} –¥–Ω—è';
			case 'sub.remaining.more_days': return ({required Object remainingDays}) => '–ù–∞–ø–æ–º–Ω–∏–º —á–µ—Ä–µ–∑ ${remainingDays} –¥–Ω–µ–π';
			case 'sub.remaining.expired': return '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ';
			case 'warnings.edit_restricted': return '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
			case 'notification.title': return '–°–∫–æ—Ä–µ–µ –æ—Ç–∫–ª—é—á–∏ –ø–æ–¥–ø–∏—Å–∫—É ‚ùó';
			case 'notification.body': return ({required Object sub}) => '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–±–µ –æ—Ç–∫–ª—é—á–∏—Ç—å ${sub} –ø–æ–∫–∞ –Ω–µ –ø–æ–∑–¥–Ω–æüòè';
			default: return null;
		}
	}
}

